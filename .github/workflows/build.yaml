name: Build csvcubed-devtools
on:
  push


jobs:
  build_in_environments:
    strategy:
      matrix:
        python-version: ['3.9']
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

       - uses: actions/setup-python@v4
         with:
           python-version: ${{ matrix.python-version }}

       - name: Install poetry
         run: pip install poetry

       - uses: actions/cache@v2
         with:
           path: ~/.cache/pypoetry/virtualenvs
           key: ${{ matrix.os }}-poetry-${{ hashFiles('poetry.lock') }}

       - name: Install python packages
         run: poetry install

       - name: Run unittests
         run: poetry run pytest --junitxml=pytest_results.xml

       - name: Upload unittests test results from xml file
         uses: actions/upload-artifact@v3
         with:
           name: ${{ matrix.os }}-python${{ matrix.python-version }} unit test results
           path: pytest_results.xml

       - name: Publish Unit Test Results
         uses: EnricoMi/publish-unit-test-result-action/composite@v2
         with:
           check_name: ${{ matrix.os }}-python${{ matrix.python-version }} unit test results
           junit_files: "pytest_results.xml"

  build_package_and_documentation:
    if: needs.build_in_environments.result == 'success'
    needs: [build_in_environments]
    runs-on: ubuntu-latest
    container:
      image: gsscogs/pythonversiontesting
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Update version for release
        if: startsWith(github.ref, 'refs/tags/v')
        run: poetry version $(echo $GIT_REF | sed -e 's/^.*\/v\(.*\)/\1/')

      - name: Update version for dev
        # uses a version identifier derived from the Git hash for this commit.
        if: ${{ !startsWith(github.ref, 'refs/tags/v') }}
        run: |
          revision="$(git rev-parse HEAD | tr \'[:lower:]\' \'[:upper:]\')"
          decimal_rev=$(echo "obase=10; ibase=16; $revision" | bc)
          poetry version "0.1.0-dev$decimal_rev"

      - name: Build whl package
        run: poetry build

      - name: Archive package and documentation
        uses: actions/upload-artifact@v3
        with:
          name: package
          path: |
            **/dist/*.whl

  publish_package_and_documentation:
    if: needs.build_package_and_documentation.result == 'success' # && startsWith(github.ref, 'refs/tags/v')
    needs: [build_package_and_documentation]
    runs-on: ubuntu-latest
    steps:

     - uses: actions/download-artifact@v3
        with:
          name: package-and-documentation

       - name: Publish a Python distribution to PyPI
         uses: pypa/gh-action-pypi-publish@release/v1
         with:
           password: ${{ secrets.TEST_PYPI_API_TOKEN }}
           repository_url: https://test.pypi.org/legacy/



